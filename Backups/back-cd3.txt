import React, { useEffect, useState } from "react";
import Input from "Componentes/Input";
import BotaoPadrao from "Componentes/BotaoPadrao";
import { recebeInputs, enviaInputs } from "Componentes/Api/Api";

export default function Formulario({ formulario, setFormulario, operacao }) {
  const [inputNome, setInputNome] = useState([]);
  const [inputValor, setInputValor] = useState([]);
  const [dados, setDados] = useState(
    [
      {
        "id": 1,
        "nome": "Janeiro",
        "entradas": [
        ],
        "saidas": [
        ],
        "total": "0,00"
      }
    ]

  );

  const escondeFormulario = () => {
    setTimeout(() => setFormulario(false), 50);
  };


  useEffect(() => {
    console.log("Atualização de estado: ", dados);
  }, [dados]);

  const aoSalvar = async (event) => {
    event.preventDefault();
    const novosDados = {
      [inputNome]: inputValor,
    };

    const respostaOperacao = verificaOperacao(dados, operacao, novosDados);

    
    setDados([respostaOperacao]);

    setInputNome("");
    setInputValor("");
  };

  const verificaOperacao = (dados, operacao, novosDados) => {
    if (dados[0]) {
      if (operacao === "soma") {
        const entradas = dados[0].entradas || []; // Verifica se 'entradas' existe, caso contrário, define um array vazio
        const saidas = dados[0].saidas || [];
        entradas.push(novosDados);

        const atualizaDados = {
          ...dados[0],
          saidas: saidas,
          entradas: entradas,
        };

        return atualizaDados;
      } else {
        const entradas = dados[0].entradas || [];
        const saidas = dados[0].saidas || []; // Verifica se 'saidas' existe, caso contrário, define um array vazio
        saidas.push(novosDados);

        const atualizaDados = {
          ...dados[0],
          saidas: saidas,
          entradas: entradas
        };

        return atualizaDados;
      }
    }
  };

  return (
    <form onSubmit={aoSalvar} className={`${formulario ? "mostra-input" : ""}`}>
      <Input
        type={"text"}
        id={"inputModalNome"}
        valor={inputNome}
        digitaValor={(inputNome) => setInputNome(inputNome)}
      >
        Digite o nome:
      </Input>
      <Input
        type={"number"}
        id={"inputModalValor"}
        valor={inputValor}
        digitaValor={(inputValor) => setInputValor(inputValor)}
      >
        Digite o valor:
      </Input>
      <BotaoPadrao type="submit" onClick={escondeFormulario}>
        Salvar
      </BotaoPadrao>
    </form>
  );
}
